name: release

on:
  push:
    branches:
      - dev

env:
  CARGO_INCREMENTAL: 0

permissions:
  contents: write

jobs:
  release:
    name: ${{ matrix.target }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            deb: true
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            deb: true

          - os: macos-11
            target: x86_64-apple-darwin
          - os: macos-11
            target: aarch64-apple-darwin
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Get version
        id: get_version
        uses: SebRollen/toml-action@2bd04b06a3ebc3e6a3eb6060de115710cad16cd6 # v1.0.2
        with:
          file: Cargo.toml
          field: package.version

      - name: Install aarch64 gcc
        if: ${{ matrix.target == 'aarch64-unknown-linux-gnu' }}
        run: sudo apt-get install gcc-aarch64-linux-gnu

      # - name: Install openssl
      #   if: ${{ matrix.os == 'ubuntu-latest' }}
      #   run: sudo apt-get install pkg-config libssl-dev

      - name: Install Rust
        uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af # v1.0.7
        with:
          toolchain: stable
          profile: minimal
          override: true
          target: ${{ matrix.target }}

      - name: Setup cache
        uses: Swatinem/rust-cache@81d053bdb0871dcd3f10763c8cc60d0adc41762b # v1
        with:
          key: ${{ matrix.target }}

      - name: Build binary
        uses: actions-rs/cargo@844f36862e911db73fe0815f00a4a2602c279505 # v1.0.3
        with:
          command: build
          args: --release --locked --target=${{ matrix.target }} --color=always --verbose
          use-cross: ${{ runner.os == 'Linux' }}

      - name: Install cargo-deb
        if: ${{ matrix.deb == true }}
        uses: actions-rs/install@9da1d2adcfe5e7c16992e8242ca33a56b6d9b101 # v0.1.2
        with:
          crate: cargo-deb

      - name: Build deb
        if: ${{ matrix.deb == true }}
        uses: actions-rs/cargo@844f36862e911db73fe0815f00a4a2602c279505 # v1.0.3
        with:
          command: deb
          args: --no-build --no-strip --output=. --target=${{ matrix.target }}

      - name: Package
        run: >
          tar -cv
          LICENSE README.md
          -C target/${{ matrix.target }}/release/ zoxide
          | gzip --best
          > 'git-zoxide_${{ matrix.target }}.tar.gz'

      - name: Upload artifact
        uses: actions/upload-artifact@82c141cc518b40d92cc801eee768e7aafc9c2fa2 # v2.3.1
        with:
          name: ${{ matrix.target }}
          path: |
            *.deb
            *.tar.gz

      - name: Create release
        uses: softprops/action-gh-release@de2c0eb89ae2a093876385947365aca7b0e5f844 # v1
        with:
          draft: true
          files: |
            *.deb
            *.tar.gz
          name: ${{ steps.get_version.outputs.value }}
          tag_name: ""
